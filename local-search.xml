<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>怎么绘制时序图</title>
    <link href="/2023/12/16/%E6%80%8E%E4%B9%88%E7%BB%98%E5%88%B6%E6%97%B6%E5%BA%8F%E5%9B%BE/"/>
    <url>/2023/12/16/%E6%80%8E%E4%B9%88%E7%BB%98%E5%88%B6%E6%97%B6%E5%BA%8F%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<ol><li><h3 id="什么是时序图"><a href="#什么是时序图" class="headerlink" title="什么是时序图"></a>什么是时序图</h3><p>时序图(Sequence Diagram)，又名序列图、循序图，是一种UML交互图。它通过描述对象之间发送消息的时间顺序显示多个对象之间的动态协作。</p></li><li><h3 id="绘制时序图常用的工具"><a href="#绘制时序图常用的工具" class="headerlink" title="绘制时序图常用的工具"></a>绘制时序图常用的工具</h3><p>绘制时序图常用的工具有：</p><p>（1）<a href="https://www.processon.com/">processon</a>，拖拽图形作图。</p><p>优点：易上手，自由度较高。</p><p>缺点：作图效率低。</p><p>（2）MarkDown，写代码作图。</p><p>优点：会自动按照时序图规则调整图形和文字位置，作图效率高。</p><p>缺点：需要学习作图语法，有一定学习成本。</p></li><li><h3 id="时序图的元素"><a href="#时序图的元素" class="headerlink" title="时序图的元素"></a>时序图的元素</h3></li><li><h3 id="时序图语法"><a href="#时序图语法" class="headerlink" title="时序图语法"></a>时序图语法</h3></li><li><h3 id="时序图例子学习"><a href="#时序图例子学习" class="headerlink" title="时序图例子学习"></a>时序图例子学习</h3></li></ol><pre><code class=" mermaid">sequenceDiagramClient-&gt;&gt;Gateway : 发送JSON RPC请求Gateway--&gt;&gt;Client : 把JSON RPC响应发送给客户端</code></pre>]]></content>
    
    
    <categories>
      
      <category>方案设计</category>
      
    </categories>
    
    
    <tags>
      
      <tag>画图</tag>
      
      <tag>时序图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>redis分布式锁的实现</title>
    <link href="/2023/12/16/redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <url>/2023/12/16/redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/asd051377305/article/details/108384490">https://blog.csdn.net/asd051377305/article/details/108384490</a></p>]]></content>
    
    
    <categories>
      
      <category>后端技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>redis</tag>
      
      <tag>分布式</tag>
      
      <tag>Go</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决GitHub打不开和访问慢等问题</title>
    <link href="/2023/12/15/GitHub%E6%89%93%E4%B8%8D%E5%BC%80%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <url>/2023/12/15/GitHub%E6%89%93%E4%B8%8D%E5%BC%80%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h3 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h3><p>在家里的网络，GitHub经常打不开或者响应时间很长，这里分享一下如何解决GitHub访问慢的问题。</p><h3 id="二、原因"><a href="#二、原因" class="headerlink" title="二、原因"></a>二、原因</h3><p>GitHub访问慢本质上是我们在访问GitHub网页的时候无法通过github.com的二级域名进行域名解析。</p><h3 id="三、解决方案"><a href="#三、解决方案" class="headerlink" title="三、解决方案"></a>三、解决方案</h3><p>手动修改设备的hosts文件，将该域名和IP的映射关系添加到设备的hosts文件中，在访问地址时会优先通过Hosts文件进行域名解析。</p><h3 id="四、解决步骤"><a href="#四、解决步骤" class="headerlink" title="四、解决步骤"></a>四、解决步骤</h3><ol><li>找到github.com域名对应的IP地址，输入网址：<a href="https://tool.chinaz.com/dns/?type=1">站长工具Dns查询</a>找出最快的IP地址</li></ol><p><img src="/2023/12/15/GitHub%E6%89%93%E4%B8%8D%E5%BC%80%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/img_1.png" alt="输入域名"><br><img src="/2023/12/15/GitHub%E6%89%93%E4%B8%8D%E5%BC%80%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/img.png" alt="选取ip"></p><ol start="2"><li>修改hosts，把最快的ip填入hosts</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim /etc/hosts<br></code></pre></td></tr></table></figure><ol start="3"><li>再次执行命令刷新DNS</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo killall -HUP mDNSResponder;say DNS cache has been flushed<br></code></pre></td></tr></table></figure><ol start="4"><li>再次打开<a href="https://github.com/">GitHub</a>,可以访问了，大功告成</li></ol>]]></content>
    
    
    <categories>
      
      <category>随手记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>借助Hexo+GitHub Pages零成本搭建个人博客</title>
    <link href="/2023/12/15/my-blog-build-remark/"/>
    <url>/2023/12/15/my-blog-build-remark/</url>
    
    <content type="html"><![CDATA[<h2 id="一、前期准备工作"><a href="#一、前期准备工作" class="headerlink" title="一、前期准备工作"></a>一、前期准备工作</h2><p>注：我的电脑是mac，后面的全部指令都是mac上操作的</p><ol><li>申请GitHub账号</li><li>本地安装Git</li><li>本地NodeJS<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install node<br></code></pre></td></tr></table></figure></li><li>本地安装Hexo<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure></li></ol><h2 id="二、用Hexo生成博客项目"><a href="#二、用Hexo生成博客项目" class="headerlink" title="二、用Hexo生成博客项目"></a>二、用Hexo生成博客项目</h2><ol><li>初始化博客<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init my-blog<br><span class="hljs-built_in">cd</span> my-blog<br>npm install<br></code></pre></td></tr></table></figure></li><li>生成网页文件&amp;本地启动<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo generate <span class="hljs-comment"># 生成页面，此命令可以简写为 `hexo g`</span><br>hexo server <span class="hljs-comment"># 本地启动，可简写为 `hexo s`</span><br></code></pre></td></tr></table></figure>通过 hexo g 生成的页面文件在项目 public 目录下;<br>使用 hexo clean 命令可以清理生成的页面文件。当配置未生效时，建议执行清理命令。</li><li>本地访问<br>浏览器访问：<a href="http://localhost:4000/">http://localhost:4000/</a> 会看到一个比较简陋的页面。没关系，接下来介绍如何更换主题。</li></ol><h2 id="三、安装-配置主题"><a href="#三、安装-配置主题" class="headerlink" title="三、安装&amp;配置主题"></a>三、安装&amp;配置主题</h2><p>官方提供了数百种主题任君选择，可以根据个人喜好更换，具体可以点击 (<a href="https://hexo.io/themes/">https://hexo.io/themes/</a>) 查看。<br>本文将主要介绍 Fluid 主题的安装与配置。</p><ol><li>安装 Fluid 主题<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure>在博客根路径下创建 _config.fluid.yml 文件，并将主题的 .&#x2F;node_modules&#x2F;hexo-theme-fluid&#x2F;_config.yml 文件内容复制过去</li><li>指定主题<br>将如下修改应用到 Hexo 博客目录中的 _config.yml:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">theme: fluid  <span class="hljs-comment"># 指定主题</span><br>language: zh-CN  <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure></li><li>创建「关于页」<br>首次使用主题的「关于页」需要手动创建。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page about<br></code></pre></td></tr></table></figure>创建成功后修改 &#x2F;source&#x2F;about&#x2F;index.md，添加 layout 属性。修改后的文件示例如下：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-string">title:</span> <span class="hljs-string">标题</span><br><span class="hljs-string">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">这里写关于页的正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></table></figure>需要注意的是， layout: about 必须存在，并且不能修改成其他值，否则不会显示头像等样式。</li><li>更新 Fluid 主题<br>通过 npm 安装主题的情况，可在博客目录下执行命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm update --save hexo-theme-fluid<br></code></pre></td></tr></table></figure></li><li>本地启动</li></ol><p>  执行如下命令重新生成页面，并启动 Hexo 服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp; hexo g &amp; hexo s<br></code></pre></td></tr></table></figure><p>再次通过浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> , 便可以看到页面变得美观多了。</p><h2 id="四、创建文章"><a href="#四、创建文章" class="headerlink" title="四、创建文章"></a>四、创建文章</h2><ol><li>修改 _config.yml 文件。这项配置是为了在生成文章的同时，生成一个同名的资源目录用于存放图片等资源文件。</li></ol><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><ol start="2"><li>创建文件名为 my-blog-build-remark 文章。</li></ol><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">post</span> my-blog-build-remark<br></code></pre></td></tr></table></figure><ol start="3"><li>设置文章的标题及其他元素信息。</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">借助Hexo+GitHub</span> <span class="hljs-string">Pages零成本搭建个人博客</span><br><span class="hljs-attr">tags:</span> [<span class="hljs-string">&#x27;hexo&#x27;</span>,<span class="hljs-string">&#x27;fluid&#x27;</span>]<br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><ol start="4"><li>如上命令执行成功后，在 source&#x2F;_posts&#x2F; 目录下生成了一个 Markdown 文件和一个同名的资源目录。<br>在 source&#x2F;_posts&#x2F;my-blog-build-remark 目录中放置一个图片文件 posts-file-tree.png，整体目录结构如下：</li></ol><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs dos">$ source/_posts (main)&gt; <span class="hljs-built_in">tree</span><br>.<br>├── hello-world.<span class="hljs-built_in">md</span><br>├── my-blog-build-remark<br>│   └── img.png<br>└── my-blog-build-remark.<span class="hljs-built_in">md</span><br></code></pre></td></tr></table></figure><ol start="5"><li>文章中插入图片</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">!<span class="hljs-selector-attr">[图片备注]</span>(./my-blog-build-remark/<span class="hljs-selector-tag">img</span><span class="hljs-selector-class">.png</span>)<br></code></pre></td></tr></table></figure><p>文章创建并编辑好之后，就可以通过 <code>hexo g &amp;&amp; hexo s</code> 命令启动服务，并在本地预览文章。</p><h2 id="五、发布GitHub-Pages"><a href="#五、发布GitHub-Pages" class="headerlink" title="五、发布GitHub Pages"></a>五、发布GitHub Pages</h2><ol><li>在GitHub上建立仓库</li><li>token获取<figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">登录G<span class="hljs-function"><span class="hljs-title">itHub</span>-&gt;</span>S<span class="hljs-function"><span class="hljs-title">ettings</span>-&gt;</span>D<span class="hljs-function"><span class="hljs-title">eveloper</span> settings-&gt;</span>P<span class="hljs-function"><span class="hljs-title">ersonal</span> access tokens-&gt;</span>T<span class="hljs-function"><span class="hljs-title">okens</span>-&gt;</span>Generate a personal access token<br></code></pre></td></tr></table></figure></li><li>修改站点配置 _config.yml<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> <span class="hljs-params">&lt;repository url&gt;</span> <span class="hljs-meta"># https:<span class="hljs-comment">//github.com/&lt;GitHub用户名&gt;/&lt;GitHub用户名&gt;.github.io.git</span></span><br><span class="hljs-symbol">  branch:</span> [branch]<br><span class="hljs-symbol">  token:</span> [token]<br></code></pre></td></tr></table></figure></li><li>生成站点文件并推送至远程 GitHub 仓库<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp; hexo deploy<br></code></pre></td></tr></table></figure>只需稍等片刻，个人博客站点就会显示在 Github Pages 中。</li></ol><h2 id="六、可能会遇到的问题"><a href="#六、可能会遇到的问题" class="headerlink" title="六、可能会遇到的问题"></a>六、可能会遇到的问题</h2><ol><li>文章中插入图片浏览器显示不出来的解决办法<br><img src="/2023/12/15/my-blog-build-remark/img.png" alt="图片显示不出来"><br>上面的错误是因为Hexo缺少处理图片的插件，导致生成的代码用的图片链接是相对路径，如果要让浏览器能够访问图片需要用绝对路径。<br>这里需要下载插件帮助我们处理图片路径问题。安装插件命令如下：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-filter-image --save<br></code></pre></td></tr></table></figure>安装完重新生成代码就可以了<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo  clean<br>hexo g &amp; hexo s<br></code></pre></td></tr></table></figure></li></ol><h2 id="七、参考资料"><a href="#七、参考资料" class="headerlink" title="七、参考资料"></a>七、参考资料</h2><ol><li>Hexo Docs：<a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></li><li>Hexo Fluid 用户手册：<a href="https://fluid-dev.github.io/hexo-fluid-docs/">https://fluid-dev.github.io/hexo-fluid-docs/</a></li><li><a href="https://xie.infoq.cn/article/ac51ce1f6e9434779c35cbb6c">https://xie.infoq.cn/article/ac51ce1f6e9434779c35cbb6c</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>随手记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
